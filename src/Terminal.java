/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//import com.formdev.flatlaf.FlatLightLaf;
import java.time.format.DateTimeFormatter;  
import java.time.LocalDateTime;   
import com.fazecast.jSerialComm.SerialPort;
import com.fazecast.jSerialComm.SerialPortEvent;
import com.fazecast.jSerialComm.SerialPortDataListener;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.text.StyledDocument;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import java.io.OutputStream;
import java.io.IOException;
import javax.swing.text.BadLocationException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author usuario
 */
public class Terminal extends javax.swing.JFrame {

    SerialPort SerialPort1;
    OutputStream outputStream1;
    OutputStream outputStream2;
    
    /**
     * Creates new form Terminal
     */
    public Terminal() {
        //FlatLightLaf.setup();
        initComponents();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox_comPort = new javax.swing.JComboBox<>();
        jComboBox_baudRate = new javax.swing.JComboBox<>();
        jComboBox_parity = new javax.swing.JComboBox<>();
        jComboBox_dataBits = new javax.swing.JComboBox<>();
        jComboBox_stopBits = new javax.swing.JComboBox<>();
        jToggleButton_open = new javax.swing.JToggleButton();
        jLabel_appOpenedDT = new javax.swing.JLabel();
        jLabel_currentPort = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane_allData = new javax.swing.JTextPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField_etx = new javax.swing.JTextField();
        jTextField_stx = new javax.swing.JTextField();
        jTextField_sendData = new javax.swing.JTextField();
        jButton_send = new javax.swing.JButton();
        jButton_clear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton_off = new javax.swing.JButton();
        jButton_t1 = new javax.swing.JButton();
        jButton_t2 = new javax.swing.JButton();
        jButton_t3 = new javax.swing.JButton();
        jButton_t4 = new javax.swing.JButton();
        jButton_allOn = new javax.swing.JButton();
        jButton_pulseT1 = new javax.swing.JButton();
        jButton_pulseT2 = new javax.swing.JButton();
        jButton_pulseT3 = new javax.swing.JButton();
        jButton_pulseT4 = new javax.swing.JButton();
        jButton_pulseAllOn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SerialPort Terminal");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel4.setText("COM Port:");

        jLabel5.setText("Baud Rate:");

        jLabel6.setText("Parity:");

        jLabel7.setText("Data bits:");

        jLabel8.setText("Stop bits:");

        jComboBox_comPort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "        " }));
        jComboBox_comPort.setSelectedIndex(-1);
        jComboBox_comPort.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBox_comPortPopupMenuWillBecomeVisible(evt);
            }
        });
        jComboBox_comPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_comPortActionPerformed(evt);
            }
        });

        jComboBox_baudRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1200", "2400", "4800", "9600", "19200", "38400", "57600", "115200" }));
        jComboBox_baudRate.setSelectedIndex(3);

        jComboBox_parity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Odd", "Even", "Mark", "Space" }));
        jComboBox_parity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_parityActionPerformed(evt);
            }
        });

        jComboBox_dataBits.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7", "8", "9" }));
        jComboBox_dataBits.setSelectedIndex(1);

        jComboBox_stopBits.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        jComboBox_stopBits.setSelectedIndex(1);

        jToggleButton_open.setText("Open");
        jToggleButton_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_openActionPerformed(evt);
            }
        });

        jLabel_currentPort.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jTextPane_allData.setEditable(false);
        jScrollPane2.setViewportView(jTextPane_allData);

        jTextField_etx.setText("03");
        jTextField_etx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_etxActionPerformed(evt);
            }
        });

        jTextField_stx.setText("02");
        jTextField_stx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_stxActionPerformed(evt);
            }
        });

        jTextField_sendData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_sendDataActionPerformed(evt);
            }
        });
        jTextField_sendData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_sendDataKeyPressed(evt);
            }
        });

        jButton_send.setText("Send");
        jButton_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_sendActionPerformed(evt);
            }
        });

        jButton_clear.setText("Clear");
        jButton_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_sendData)
                    .addComponent(jButton_send, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_stx, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_etx, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_etx, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_stx, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_sendData, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_clear)
                    .addComponent(jButton_send))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Commands", jPanel1);

        jButton_off.setText("OFF");
        jButton_off.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_offActionPerformed(evt);
            }
        });

        jButton_t1.setText("T1");
        jButton_t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_t1ActionPerformed(evt);
            }
        });

        jButton_t2.setText("T2");
        jButton_t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_t2ActionPerformed(evt);
            }
        });

        jButton_t3.setText("T3");
        jButton_t3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_t3ActionPerformed(evt);
            }
        });

        jButton_t4.setText("T4");
        jButton_t4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_t4ActionPerformed(evt);
            }
        });

        jButton_allOn.setText("A ON");
        jButton_allOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_allOnActionPerformed(evt);
            }
        });

        jButton_pulseT1.setText("P");
        jButton_pulseT1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pulseT1ActionPerformed(evt);
            }
        });

        jButton_pulseT2.setText("P");
        jButton_pulseT2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pulseT2ActionPerformed(evt);
            }
        });

        jButton_pulseT3.setText("P");
        jButton_pulseT3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pulseT3ActionPerformed(evt);
            }
        });

        jButton_pulseT4.setText("P");
        jButton_pulseT4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pulseT4ActionPerformed(evt);
            }
        });

        jButton_pulseAllOn.setText("P");
        jButton_pulseAllOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_pulseAllOnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton_t1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_pulseT1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_pulseT2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_t2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_t3, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(jButton_pulseT3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_t4, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(jButton_pulseT4, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_allOn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_pulseAllOn, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton_off)
                .addGap(28, 28, 28))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton_off, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_t1)
                            .addComponent(jButton_t2)
                            .addComponent(jButton_t3)
                            .addComponent(jButton_t4)
                            .addComponent(jButton_allOn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_pulseT1)
                            .addComponent(jButton_pulseT2)
                            .addComponent(jButton_pulseT3)
                            .addComponent(jButton_pulseT4)
                            .addComponent(jButton_pulseAllOn))))
                .addGap(11, 11, 11))
        );

        jTabbedPane2.addTab("Plus725 IO ", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel_appOpenedDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_currentPort, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jComboBox_comPort, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jComboBox_baudRate, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox_parity, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox_dataBits, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox_stopBits, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jToggleButton_open))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel_appOpenedDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_currentPort, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jComboBox_stopBits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_dataBits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_parity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_baudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_comPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton_open))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jTextField_sendDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_sendDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_sendDataActionPerformed

    private void jButton_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_sendActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        String dataToPrint = "";
        String dataToSend;
        int stx = 0;
        int etx = 0;
        dataToSend = jTextField_sendData.getText();
        JTextPane textPane = jTextPane_allData;
        StyledDocument doc = textPane.getStyledDocument();
        DefaultCaret caret = (DefaultCaret)textPane.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);

        try{

             if(jTextField_stx.getText().length() == 0){
             }else{
                 //outputStream1.write(Integer.parseInt(jTextField_stx.getText()));
                 stx = Integer.parseInt(jTextField_stx.getText());
                 dataToPrint += hexToAscii(String.format("%02X",Integer.parseInt(jTextField_stx.getText())));
             }
            // outputStream1.write(dataToSend.getBytes());
            dataToPrint += dataToSend;
            if(jTextField_etx.getText().length() == 0){
             }else{ 
                //outputStream1.write(Integer.parseInt(jTextField_etx.getText()));
                etx = Integer.parseInt(jTextField_etx.getText());
                dataToPrint += hexToAscii(String.format("%02X",Integer.parseInt(jTextField_etx.getText())));
            }
            
            byte[] c = new byte[String.valueOf(stx).getBytes().length + dataToSend.getBytes().length + String.valueOf(etx).getBytes().length];
            System.arraycopy(String.valueOf(stx).getBytes(), 0, c, 0, String.valueOf(stx).getBytes().length);
            System.arraycopy(dataToSend.getBytes(), 0, c, String.valueOf(stx).getBytes().length, dataToSend.getBytes().length);
            System.arraycopy(String.valueOf(etx).getBytes(), 0, c, String.valueOf(stx).getBytes().length + dataToSend.getBytes().length, String.valueOf(etx).getBytes().length);
            
            //outputStream1.write(String.valueOf(stx).getBytes());
            outputStream1.write(c);
            //outputStream1.write(String.valueOf(etx).getBytes());
            
            dataToPrint += "\r\n";
            
            //jTextArea_allData.setText(dataToPrint);
            
            System.out.println("case textPane: " + dataToPrint);
            Style style = textPane.addStyle("I'm a Style", null);
            StyleConstants.setForeground(style, Color.MAGENTA);
            try{
                doc.insertString(doc.getLength(), dataToPrint, style);
            } catch (BadLocationException ex) {
                System.out.println("Bad location");
            }

        }
        catch(IOException c){
            JOptionPane.showMessageDialog(this,c,"ERROR",ERROR_MESSAGE);
        }
                
    }//GEN-LAST:event_jButton_sendActionPerformed

    private void jButton_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_clearActionPerformed
        // TODO add your handling code here:
        
        //jTextArea_allData.setText("");
        jTextPane_allData.setText("");
        //dataToPrint = "";
    }//GEN-LAST:event_jButton_clearActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        jButton_send.setEnabled(false);
        jTextField_sendData.setEnabled(false);
        jTextField_stx.setEnabled(false);
        jTextField_etx.setEnabled(false);
        //jComboBox_endOfLine.setEnabled(false);
        //jButton_clear.setEnabled(false);
        jButton_t1.setEnabled(false);
        jButton_t2.setEnabled(false);
        jButton_t3.setEnabled(false);
        jButton_t4.setEnabled(false);
        jButton_allOn.setEnabled(false);
        jButton_pulseT1.setEnabled(false);
        jButton_pulseT2.setEnabled(false);
        jButton_pulseT3.setEnabled(false);
        jButton_pulseT4.setEnabled(false);
        jButton_pulseAllOn.setEnabled(false);
        jButton_off.setEnabled(false);
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        jLabel_appOpenedDT.setText("Application started at " + dtf.format(now) + "\r\n");
        
        addComponentListener(new ComponentAdapter() {
        @Override
        public void componentResized(ComponentEvent e) {
            int preferredWidth = 430;
            setSize(new Dimension(preferredWidth, getHeight()));
            super.componentResized(e);
        }
        });
        
    }//GEN-LAST:event_formWindowOpened

    private void jComboBox_comPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_comPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_comPortActionPerformed

    private void jComboBox_comPortPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBox_comPortPopupMenuWillBecomeVisible
        // TODO add your handling code here:
        jComboBox_comPort.removeAllItems();
        SerialPort []portList = SerialPort.getCommPorts();
        for (SerialPort port : portList) {
            jComboBox_comPort.addItem(port.getSystemPortName());
        }
    }//GEN-LAST:event_jComboBox_comPortPopupMenuWillBecomeVisible
    
    private static String hexToAscii(String hexStr) {
    StringBuilder output = new StringBuilder("");
    
    for (int i = 0; i < hexStr.length(); i += 2) {
        String str = hexStr.substring(i, i + 2);
        output.append((char) Integer.parseInt(str, 16));
    }
    
    return output.toString();
    }
    
    private void jToggleButton_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_openActionPerformed
        // TODO add your handling code here:
        if(jToggleButton_open.isSelected() == true){
            try{
                SerialPort []portlist = SerialPort.getCommPorts();
                SerialPort1 = portlist[jComboBox_comPort.getSelectedIndex()];
                SerialPort1.setBaudRate(Integer.parseInt(jComboBox_baudRate.getSelectedItem().toString()));
                SerialPort1.setParity(jComboBox_parity.getSelectedIndex());
                SerialPort1.setNumDataBits(Integer.parseInt(jComboBox_dataBits.getSelectedItem().toString()));
                SerialPort1.setNumStopBits(Integer.parseInt(jComboBox_stopBits.getSelectedItem().toString()));
                SerialPort1.openPort();
                JTextPane textPane = jTextPane_allData;
                StyledDocument doc = textPane.getStyledDocument();
                DefaultCaret caret = (DefaultCaret)textPane.getCaret();
                caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
                
                Style style1 = textPane.addStyle("I'm a Style", null);

                SerialPort1.addDataListener(new SerialPortDataListener() {
                    @Override
                    public int getListeningEvents() { return SerialPort.LISTENING_EVENT_DATA_RECEIVED; }

                    @Override
                    public void serialEvent(SerialPortEvent event)
                    {
                       String dataIn = "";
                       byte[] newData = event.getReceivedData();
                       //System.out.println("Received data of size: " + newData.length);
                       for (int i = 0; i < newData.length; ++i)
                          //System.out.print((char)newData[i]);
                        dataIn += (char)newData[i];
                        //System.out.println("\n");
                    
                    StyleConstants.setForeground(style1, Color.BLUE);
                    try{
                        doc.insertString(doc.getLength(), dataIn + "\r\n", style1);
                    } catch (BadLocationException ex) {
                        System.out.println("Bad location");
                    }
                    
                    }   
                    });
                
                if(SerialPort1.isOpen()){
                    jButton_send.setEnabled(true);
                    jTextField_sendData.setEnabled(true);
                    jTextField_stx.setEnabled(true);
                    jTextField_etx.setEnabled(true);
                    //jComboBox_endOfLine.setEnabled(true);
                    //jButton_clear.setEnabled(true);
                    jButton_t1.setEnabled(true);
                    jButton_t2.setEnabled(true);
                    jButton_t3.setEnabled(true);
                    jButton_t4.setEnabled(true);
                    jButton_allOn.setEnabled(true);
                    jButton_pulseT1.setEnabled(true);
                    jButton_pulseT2.setEnabled(true);
                    jButton_pulseT3.setEnabled(true);
                    jButton_pulseT4.setEnabled(true);
                    jButton_pulseAllOn.setEnabled(true);
                    jButton_off.setEnabled(true);

                    
                    jComboBox_comPort.setEnabled(false);
                    jComboBox_baudRate.setEnabled(false);
                    jComboBox_parity.setEnabled(false);
                    jComboBox_dataBits.setEnabled(false);
                    jComboBox_stopBits.setEnabled(false);
                    
                    
                    jToggleButton_open.setText("Close");
                    jLabel_currentPort.setText(jComboBox_comPort.getSelectedItem().toString() + " Opened ");
                    jLabel_currentPort.setForeground(Color.BLUE);
                   
                }
                else{
                    JOptionPane.showMessageDialog(this,"ERROR TO OPEN " + jComboBox_comPort.getSelectedItem().toString(),"ERROR",ERROR_MESSAGE);
                    jToggleButton_open.setSelected(false);
                }
            }
            catch(ArrayIndexOutOfBoundsException a){
                JOptionPane.showMessageDialog(this,"SELECT A COM PORT!","ERROR",ERROR_MESSAGE);
                jToggleButton_open.setSelected(false);
            }
            catch(Exception b){
                JOptionPane.showMessageDialog(this,b,"ERROR",ERROR_MESSAGE);
                jToggleButton_open.setSelected(false);
            }
        } 
        else if(jToggleButton_open.isSelected() == false){
            SerialPort1.closePort();
            jButton_send.setEnabled(false);
            jTextField_sendData.setEnabled(false);
            jTextField_stx.setEnabled(false);
            jTextField_etx.setEnabled(false);
            //jComboBox_endOfLine.setEnabled(false);
            //jButton_clear.setEnabled(false);
            jButton_t1.setEnabled(false);
            jButton_t2.setEnabled(false);
            jButton_t3.setEnabled(false);
            jButton_t4.setEnabled(false);
            jButton_allOn.setEnabled(false);
            jButton_pulseT1.setEnabled(false);
            jButton_pulseT2.setEnabled(false);
            jButton_pulseT3.setEnabled(false);
            jButton_pulseT4.setEnabled(false);
            jButton_pulseAllOn.setEnabled(false);
            jButton_off.setEnabled(false);
        
            jComboBox_comPort.setEnabled(true);
            jComboBox_baudRate.setEnabled(true);
            jComboBox_parity.setEnabled(true);
            jComboBox_dataBits.setEnabled(true);
            jComboBox_stopBits.setEnabled(true);
            jToggleButton_open.setText("Open");
            jLabel_currentPort.setText("");
        }
    }//GEN-LAST:event_jToggleButton_openActionPerformed

    private void jTextField_stxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_stxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_stxActionPerformed

    private void jTextField_etxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_etxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_etxActionPerformed

    private void jButton_t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_t1ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        
        try{
        outputStream1.write(Integer.parseInt("02"));
        outputStream1.write("T1".getBytes());
        outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_jButton_t1ActionPerformed

    private void jButton_pulseT1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pulseT1ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T1".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }

        try {
            TimeUnit.MILLISECONDS.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T0".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_pulseT1ActionPerformed

    private void jButton_offActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_offActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        try{ 
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T0".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_offActionPerformed

    private void jButton_t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_t2ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        
        try{
        outputStream1.write(Integer.parseInt("02"));
        outputStream1.write("T2".getBytes());
        outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_t2ActionPerformed

    private void jButton_t3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_t3ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        
        try{
        outputStream1.write(Integer.parseInt("02"));
        outputStream1.write("T4".getBytes());
        outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_t3ActionPerformed

    private void jButton_t4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_t4ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        
        try{
        outputStream1.write(Integer.parseInt("02"));
        outputStream1.write("T8".getBytes());
        outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_t4ActionPerformed

    private void jButton_allOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_allOnActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();
        
        try{
        outputStream1.write(Integer.parseInt("02"));
        outputStream1.write("TF".getBytes());
        outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_allOnActionPerformed

    private void jButton_pulseT2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pulseT2ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T2".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }

        try {
            TimeUnit.MILLISECONDS.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T0".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_pulseT2ActionPerformed

    private void jButton_pulseT3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pulseT3ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T4".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }

        try {
            TimeUnit.MILLISECONDS.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T0".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_pulseT3ActionPerformed

    private void jButton_pulseT4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pulseT4ActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T8".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }

        try {
            TimeUnit.MILLISECONDS.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T0".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_pulseT4ActionPerformed

    private void jButton_pulseAllOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_pulseAllOnActionPerformed
        // TODO add your handling code here:
        outputStream1 = SerialPort1.getOutputStream();

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("TF".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }

        try {
            TimeUnit.MILLISECONDS.sleep(500);
        } catch (InterruptedException ex) {
            Logger.getLogger(Terminal.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            outputStream1.write(Integer.parseInt("02"));
            outputStream1.write("T0".getBytes());
            outputStream1.write(Integer.parseInt("03"));
        }
        catch(IOException a){
            JOptionPane.showMessageDialog(this,a,"ERROR",ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_pulseAllOnActionPerformed

    private void jComboBox_parityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_parityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_parityActionPerformed

    private void jTextField_sendDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_sendDataKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == 10) {
            jButton_send.doClick();
        }
    }//GEN-LAST:event_jTextField_sendDataKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Terminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Terminal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_allOn;
    private javax.swing.JButton jButton_clear;
    private javax.swing.JButton jButton_off;
    private javax.swing.JButton jButton_pulseAllOn;
    private javax.swing.JButton jButton_pulseT1;
    private javax.swing.JButton jButton_pulseT2;
    private javax.swing.JButton jButton_pulseT3;
    private javax.swing.JButton jButton_pulseT4;
    private javax.swing.JButton jButton_send;
    private javax.swing.JButton jButton_t1;
    private javax.swing.JButton jButton_t2;
    private javax.swing.JButton jButton_t3;
    private javax.swing.JButton jButton_t4;
    private javax.swing.JComboBox<String> jComboBox_baudRate;
    private javax.swing.JComboBox<String> jComboBox_comPort;
    private javax.swing.JComboBox<String> jComboBox_dataBits;
    private javax.swing.JComboBox<String> jComboBox_parity;
    private javax.swing.JComboBox<String> jComboBox_stopBits;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel_appOpenedDT;
    private javax.swing.JLabel jLabel_currentPort;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField_etx;
    private javax.swing.JTextField jTextField_sendData;
    private javax.swing.JTextField jTextField_stx;
    private javax.swing.JTextPane jTextPane_allData;
    private javax.swing.JToggleButton jToggleButton_open;
    // End of variables declaration//GEN-END:variables
}